# --- JWT (for development) ---
jwt.secret.key=${JWT_SECRET_KEY}

# --- POSTGRES (Using NeonDB for development) ---
spring.datasource.url=jdbc:postgresql://<your-neon-db-url>?sslmode=require&channel_binding=require
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=create

# --- Mail (MailHog for local testing) ---
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# --- Judge0 (Development Key) ---
judge0.api.url=https://judge0-ce.p.rapidapi.com
judge0.api.host=judge0-ce.p.rapidapi.com
judge0.api.key=${JUDGE0_API_KEY}

# --- AWS (Configuration for LocalStack) ---
aws.s3.bucket-name=testcase-bucket
aws.sqs.queue-name=submission-queue

# Caching properties
aws.s3.test-case-cache-ttl-minutes=30

# Maximum size in kilobytes for problem test case uploads
problem.upload.max-size-kb=300

# Correct properties for Spring Cloud AWS v3.x
spring.cloud.aws.region.static=ap-southeast-1
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}

# Endpoint overrides for LocalStack services
spring.cloud.aws.s3.endpoint=http://localhost:4566
spring.cloud.aws.sqs.endpoint=http://localhost:4566
spring.cloud.aws.lambda.endpoint=http://localhost:4566

# Enable path-style access (important for LocalStack)
spring.cloud.aws.s3.path-style-access-enabled=true

# ===================================================================
# HTTP WIRE LOGGING (FOR DEBUGGING JUDGE0)
# ===================================================================
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.apache.http=DEBUG
logging.level.org.apache.http.wire=DEBUG

# --- REDIS (For Duel Feature) ---
spring.data.redis.host=localhost
spring.data.redis.port=6379

# --- Frontend URL ---
app.frontend.url=http://localhost:5173

# The default email for the root admin account
admin.default-email=${ADMIN_EMAIL}
# The default password for the root admin account
admin.default-password=${ADMIN_PASSWORD}

# --- Permission Timings ---
# The duration in minutes for which a temporary permission is valid
permissions.expiry-minutes=2

# --- Scheduler Timings (Cron Expressions) ---
# Cron for the daily cleanup of expired permissions. (Currently set to 4 AM daily)
scheduler.cleanup.permissions.cron=0 0 4 * * *

# Cron for the (future) daily cleanup of orphaned S3 files. (Currently set to 5 AM daily)
scheduler.cleanup.s3-orphans.cron=0 0 5 * * *

lambda.internal.secret=${LAMBDA_INTERNAL_SECRET}

# --- LocalStack setup commands (comments only) ---
# aws --endpoint-url=http://localhost:4566 s3 mb s3://testcase-bucket --region ap-southeast-1
# aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name submission-queue
# aws --endpoint-url=http://localhost:4566 sqs get-queue-attributes --queue-url http://localhost:4566/000000000000/submission-queue --attribute-names ApproximateNumberOfMessages

# ./gradlew shadowJar
# docker-compose up

# awslocal iam create-role \
#  --role-name ProblemFinalizationLambdaRole \
#  --assume-role-policy-document file://trust-policy.json

# awslocal lambda create-function \
#  --function-name problem-finalization-handler \
#  --runtime java21 \
#  --handler com.yourlambda.handler.S3FinalizationHandler::handleRequest \
#  --zip-file fileb://build/libs/problem-finalization-lambda-1.0-SNAPSHOT-aws.jar \
#  --role "arn:aws:iam::000000000000:role/ProblemFinalizationLambdaRole" \
#  --environment "Variables={BACKEND_API_ENDPOINT=http://host.docker.internal:8080/api,INTERNAL_API_SECRET=${LAMBDA_INTERNAL_SECRET}}"

# awslocal s3api put-bucket-notification-configuration \
#  --bucket testcase-bucket \
#  --notification-configuration file://notification.json